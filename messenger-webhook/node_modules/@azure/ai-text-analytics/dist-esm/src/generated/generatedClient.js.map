{"version":3,"file":"generatedClient.js","sourceRoot":"","sources":["../../../src/generated/generatedClient.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,OAAO,KAAK,QAAQ,MAAM,kBAAkB,CAAC;AAC7C,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,OAAO,MAAM,kBAAkB,CAAC;AAC5C,OAAO,KAAK,UAAU,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,MAAM,eAAgB,SAAQ,sBAAsB;IAClD;;;;;;OAMG;IACH,YAAY,WAAyE,EAAE,QAAgB,EAAE,OAAuC;QAC9I,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAwBD,0BAA0B,CAAC,KAAqC,EAAE,OAA0H,EAAE,QAA0D;QACtP,OAAO,IAAI,CAAC,oBAAoB,CAC9B;YACE,KAAK;YACL,OAAO;SACR,EACD,uCAAuC,EACvC,QAAQ,CAAuD,CAAC;IACpE,CAAC;IAuBD,eAAe,CAAC,KAAqC,EAAE,OAAoH,EAAE,QAA+D;QAC1O,OAAO,IAAI,CAAC,oBAAoB,CAC9B;YACE,KAAK;YACL,OAAO;SACR,EACD,4BAA4B,EAC5B,QAAQ,CAA4C,CAAC;IACzD,CAAC;IA0BD,UAAU,CAAC,KAAqC,EAAE,OAA2G,EAAE,QAA2D;QACxN,OAAO,IAAI,CAAC,oBAAoB,CAC9B;YACE,KAAK;YACL,OAAO;SACR,EACD,uBAAuB,EACvB,QAAQ,CAAuC,CAAC;IACpD,CAAC;IAwBD,SAAS,CAAC,KAAgC,EAAE,OAAyG,EAAE,QAA0D;QAC/M,OAAO,IAAI,CAAC,oBAAoB,CAC9B;YACE,KAAK;YACL,OAAO;SACR,EACD,sBAAsB,EACtB,QAAQ,CAAsC,CAAC;IACnD,CAAC;IAwBD,SAAS,CAAC,KAAqC,EAAE,OAA4G,EAAE,QAA6D;QAC1N,OAAO,IAAI,CAAC,oBAAoB,CAC9B;YACE,KAAK;YACL,OAAO;SACR,EACD,sBAAsB,EACtB,QAAQ,CAAuC,CAAC;IACpD,CAAC;CACF;AAED,2BAA2B;AAC3B,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACpD,MAAM,uCAAuC,GAA2B;IACtE,UAAU,EAAE,MAAM;IAClB,IAAI,EAAE,8BAA8B;IACpC,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;KACpB;IACD,eAAe,EAAE;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,iBAAiB;KAC7B;IACD,WAAW,EAAE;QACX,aAAa,EAAE,OAAO;QACtB,MAAM,kCACD,OAAO,CAAC,uBAAuB,KAClC,QAAQ,EAAE,IAAI,GACf;KACF;IACD,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;KACF;IACD,UAAU;CACX,CAAC;AAEF,MAAM,4BAA4B,GAA2B;IAC3D,UAAU,EAAE,MAAM;IAClB,IAAI,EAAE,kBAAkB;IACxB,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;KACpB;IACD,eAAe,EAAE;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,iBAAiB;KAC7B;IACD,WAAW,EAAE;QACX,aAAa,EAAE,OAAO;QACtB,MAAM,kCACD,OAAO,CAAC,uBAAuB,KAClC,QAAQ,EAAE,IAAI,GACf;KACF;IACD,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,mBAAmB;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;KACF;IACD,UAAU;CACX,CAAC;AAEF,MAAM,uBAAuB,GAA2B;IACtD,UAAU,EAAE,MAAM;IAClB,IAAI,EAAE,YAAY;IAClB,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;KACpB;IACD,eAAe,EAAE;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,iBAAiB;KAC7B;IACD,WAAW,EAAE;QACX,aAAa,EAAE,OAAO;QACtB,MAAM,kCACD,OAAO,CAAC,uBAAuB,KAClC,QAAQ,EAAE,IAAI,GACf;KACF;IACD,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;KACF;IACD,UAAU;CACX,CAAC;AAEF,MAAM,sBAAsB,GAA2B;IACrD,UAAU,EAAE,MAAM;IAClB,IAAI,EAAE,WAAW;IACjB,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;KACpB;IACD,eAAe,EAAE;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,iBAAiB;KAC7B;IACD,WAAW,EAAE;QACX,aAAa,EAAE,OAAO;QACtB,MAAM,kCACD,OAAO,CAAC,kBAAkB,KAC7B,QAAQ,EAAE,IAAI,GACf;KACF;IACD,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,cAAc;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;KACF;IACD,UAAU;CACX,CAAC;AAEF,MAAM,sBAAsB,GAA2B;IACrD,UAAU,EAAE,MAAM;IAClB,IAAI,EAAE,WAAW;IACjB,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;KACpB;IACD,eAAe,EAAE;QACf,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,iBAAiB;KAC7B;IACD,WAAW,EAAE;QACX,aAAa,EAAE,OAAO;QACtB,MAAM,kCACD,OAAO,CAAC,uBAAuB,KAClC,QAAQ,EAAE,IAAI,GACf;KACF;IACD,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,kBAAkB;SACvC;KACF;IACD,UAAU;CACX,CAAC;AAEF,OAAO,EACL,eAAe,EACf,sBAAsB,EACtB,MAAM,IAAI,eAAe,EACzB,OAAO,IAAI,gBAAgB,EAC5B,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as Parameters from \"./models/parameters\";\nimport { GeneratedClientContext } from \"./generatedClientContext\";\n\nclass GeneratedClient extends GeneratedClientContext {\n  /**\n   * Initializes a new instance of the GeneratedClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials, endpoint: string, options?: coreHttp.ServiceClientOptions) {\n    super(credentials, endpoint, options);\n  }\n\n  /**\n   * The API returns a list of general named entities in a given document. For the list of supported\n   * entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics\n   * API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a>\n   * for the list of enabled languages.\n   * @summary Named Entity Recognition\n   * @param input Collection of documents to analyze.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.EntitiesRecognitionGeneralResponse>\n   */\n  entitiesRecognitionGeneral(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientEntitiesRecognitionGeneralOptionalParams): Promise<Models.EntitiesRecognitionGeneralResponse>;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param callback The callback\n   */\n  entitiesRecognitionGeneral(input: Models.MultiLanguageBatchInput, callback: coreHttp.ServiceCallback<Models.EntitiesResult>): void;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  entitiesRecognitionGeneral(input: Models.MultiLanguageBatchInput, options: Models.GeneratedClientEntitiesRecognitionGeneralOptionalParams, callback: coreHttp.ServiceCallback<Models.EntitiesResult>): void;\n  entitiesRecognitionGeneral(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientEntitiesRecognitionGeneralOptionalParams | coreHttp.ServiceCallback<Models.EntitiesResult>, callback?: coreHttp.ServiceCallback<Models.EntitiesResult>): Promise<Models.EntitiesRecognitionGeneralResponse> {\n    return this.sendOperationRequest(\n      {\n        input,\n        options\n      },\n      entitiesRecognitionGeneralOperationSpec,\n      callback) as Promise<Models.EntitiesRecognitionGeneralResponse>;\n  }\n\n  /**\n   * The API returns a list of recognized entities with links to a well-known knowledge base. See the\n   * <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of\n   * enabled languages.\n   * @summary Linked entities from a well-known knowledge base\n   * @param input Collection of documents to analyze.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.EntitiesLinkingResponse>\n   */\n  entitiesLinking(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientEntitiesLinkingOptionalParams): Promise<Models.EntitiesLinkingResponse>;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param callback The callback\n   */\n  entitiesLinking(input: Models.MultiLanguageBatchInput, callback: coreHttp.ServiceCallback<Models.EntityLinkingResult>): void;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  entitiesLinking(input: Models.MultiLanguageBatchInput, options: Models.GeneratedClientEntitiesLinkingOptionalParams, callback: coreHttp.ServiceCallback<Models.EntityLinkingResult>): void;\n  entitiesLinking(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientEntitiesLinkingOptionalParams | coreHttp.ServiceCallback<Models.EntityLinkingResult>, callback?: coreHttp.ServiceCallback<Models.EntityLinkingResult>): Promise<Models.EntitiesLinkingResponse> {\n    return this.sendOperationRequest(\n      {\n        input,\n        options\n      },\n      entitiesLinkingOperationSpec,\n      callback) as Promise<Models.EntitiesLinkingResponse>;\n  }\n\n  /**\n   * The API returns a list of strings denoting the key phrases in the input text. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of\n   * enabled languages.\n   * @summary Key Phrases\n   * @param input Collection of documents to analyze. Documents can now contain a language field to\n   * indicate the text language\n   * @param [options] The optional parameters\n   * @returns Promise<Models.KeyPhrasesResponse>\n   */\n  keyPhrases(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientKeyPhrasesOptionalParams): Promise<Models.KeyPhrasesResponse>;\n  /**\n   * @param input Collection of documents to analyze. Documents can now contain a language field to\n   * indicate the text language\n   * @param callback The callback\n   */\n  keyPhrases(input: Models.MultiLanguageBatchInput, callback: coreHttp.ServiceCallback<Models.KeyPhraseResult>): void;\n  /**\n   * @param input Collection of documents to analyze. Documents can now contain a language field to\n   * indicate the text language\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  keyPhrases(input: Models.MultiLanguageBatchInput, options: Models.GeneratedClientKeyPhrasesOptionalParams, callback: coreHttp.ServiceCallback<Models.KeyPhraseResult>): void;\n  keyPhrases(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientKeyPhrasesOptionalParams | coreHttp.ServiceCallback<Models.KeyPhraseResult>, callback?: coreHttp.ServiceCallback<Models.KeyPhraseResult>): Promise<Models.KeyPhrasesResponse> {\n    return this.sendOperationRequest(\n      {\n        input,\n        options\n      },\n      keyPhrasesOperationSpec,\n      callback) as Promise<Models.KeyPhrasesResponse>;\n  }\n\n  /**\n   * The API returns the detected language and a numeric score between 0 and 1. Scores close to 1\n   * indicate 100% certainty that the identified language is true. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of\n   * enabled languages.\n   * @summary Detect Language\n   * @param input Collection of documents to analyze.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.LanguagesResponse>\n   */\n  languages(input: Models.LanguageBatchInput, options?: Models.GeneratedClientLanguagesOptionalParams): Promise<Models.LanguagesResponse>;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param callback The callback\n   */\n  languages(input: Models.LanguageBatchInput, callback: coreHttp.ServiceCallback<Models.LanguageResult>): void;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  languages(input: Models.LanguageBatchInput, options: Models.GeneratedClientLanguagesOptionalParams, callback: coreHttp.ServiceCallback<Models.LanguageResult>): void;\n  languages(input: Models.LanguageBatchInput, options?: Models.GeneratedClientLanguagesOptionalParams | coreHttp.ServiceCallback<Models.LanguageResult>, callback?: coreHttp.ServiceCallback<Models.LanguageResult>): Promise<Models.LanguagesResponse> {\n    return this.sendOperationRequest(\n      {\n        input,\n        options\n      },\n      languagesOperationSpec,\n      callback) as Promise<Models.LanguagesResponse>;\n  }\n\n  /**\n   * The API returns a sentiment prediction, as well as sentiment scores for each sentiment class\n   * (Positive, Negative, and Neutral) for the document and each sentence within it. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of\n   * enabled languages.\n   * @summary Sentiment\n   * @param input Collection of documents to analyze.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.SentimentResponse2>\n   */\n  sentiment(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientSentimentOptionalParams): Promise<Models.SentimentResponse2>;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param callback The callback\n   */\n  sentiment(input: Models.MultiLanguageBatchInput, callback: coreHttp.ServiceCallback<Models.SentimentResponse>): void;\n  /**\n   * @param input Collection of documents to analyze.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  sentiment(input: Models.MultiLanguageBatchInput, options: Models.GeneratedClientSentimentOptionalParams, callback: coreHttp.ServiceCallback<Models.SentimentResponse>): void;\n  sentiment(input: Models.MultiLanguageBatchInput, options?: Models.GeneratedClientSentimentOptionalParams | coreHttp.ServiceCallback<Models.SentimentResponse>, callback?: coreHttp.ServiceCallback<Models.SentimentResponse>): Promise<Models.SentimentResponse2> {\n    return this.sendOperationRequest(\n      {\n        input,\n        options\n      },\n      sentimentOperationSpec,\n      callback) as Promise<Models.SentimentResponse2>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers);\nconst entitiesRecognitionGeneralOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"entities/recognition/general\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.modelVersion,\n    Parameters.includeStatistics\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.MultiLanguageBatchInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntitiesResult\n    },\n    default: {\n      bodyMapper: Mappers.TextAnalyticsError\n    }\n  },\n  serializer\n};\n\nconst entitiesLinkingOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"entities/linking\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.modelVersion,\n    Parameters.includeStatistics\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.MultiLanguageBatchInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntityLinkingResult\n    },\n    default: {\n      bodyMapper: Mappers.TextAnalyticsError\n    }\n  },\n  serializer\n};\n\nconst keyPhrasesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"keyPhrases\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.modelVersion,\n    Parameters.includeStatistics\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.MultiLanguageBatchInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyPhraseResult\n    },\n    default: {\n      bodyMapper: Mappers.TextAnalyticsError\n    }\n  },\n  serializer\n};\n\nconst languagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"languages\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.modelVersion,\n    Parameters.includeStatistics\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.LanguageBatchInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.LanguageResult\n    },\n    default: {\n      bodyMapper: Mappers.TextAnalyticsError\n    }\n  },\n  serializer\n};\n\nconst sentimentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"sentiment\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.modelVersion,\n    Parameters.includeStatistics\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.MultiLanguageBatchInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.SentimentResponse\n    },\n    default: {\n      bodyMapper: Mappers.TextAnalyticsError\n    }\n  },\n  serializer\n};\n\nexport {\n  GeneratedClient,\n  GeneratedClientContext,\n  Models as GeneratedModels,\n  Mappers as GeneratedMappers\n};\n"]}