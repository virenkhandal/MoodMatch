/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const MultiLanguageInput = {
    serializedName: "MultiLanguageInput",
    type: {
        name: "Composite",
        className: "MultiLanguageInput",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            text: {
                required: true,
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            language: {
                serializedName: "language",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MultiLanguageBatchInput = {
    serializedName: "MultiLanguageBatchInput",
    type: {
        name: "Composite",
        className: "MultiLanguageBatchInput",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MultiLanguageInput"
                        }
                    }
                }
            }
        }
    }
};
export const InnerError = {
    serializedName: "InnerError",
    type: {
        name: "Composite",
        className: "InnerError",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "InvalidParameterValue",
                        "InvalidRequestBodyFormat",
                        "EmptyRequest",
                        "MissingInputRecords",
                        "InvalidDocument",
                        "ModelVersionIncorrect",
                        "InvalidDocumentBatch",
                        "UnsupportedLanguageCode",
                        "InvalidCountryHint"
                    ]
                }
            },
            message: {
                required: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            innerError: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError"
                }
            }
        }
    }
};
export const TextAnalyticsError = {
    serializedName: "TextAnalyticsError",
    type: {
        name: "Composite",
        className: "TextAnalyticsError",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "InvalidRequest",
                        "InvalidArgument",
                        "InternalServerError",
                        "ServiceUnavailable"
                    ]
                }
            },
            message: {
                required: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            innerError: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError"
                }
            },
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsError"
                        }
                    }
                }
            }
        }
    }
};
export const DocumentError = {
    serializedName: "DocumentError",
    type: {
        name: "Composite",
        className: "DocumentError",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            error: {
                required: true,
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "TextAnalyticsError"
                }
            }
        }
    }
};
export const TextAnalyticsWarning = {
    serializedName: "TextAnalyticsWarning",
    type: {
        name: "Composite",
        className: "TextAnalyticsWarning",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "LongWordsInDocument",
                        "DocumentTruncated"
                    ]
                }
            },
            message: {
                required: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TextDocumentStatistics = {
    serializedName: "TextDocumentStatistics",
    type: {
        name: "Composite",
        className: "TextDocumentStatistics",
        modelProperties: {
            characterCount: {
                required: true,
                serializedName: "charactersCount",
                type: {
                    name: "Number"
                }
            },
            transactionCount: {
                required: true,
                serializedName: "transactionsCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SentimentConfidenceScores = {
    serializedName: "SentimentConfidenceScores",
    type: {
        name: "Composite",
        className: "SentimentConfidenceScores",
        modelProperties: {
            positive: {
                required: true,
                serializedName: "positive",
                type: {
                    name: "Number"
                }
            },
            neutral: {
                required: true,
                serializedName: "neutral",
                type: {
                    name: "Number"
                }
            },
            negative: {
                required: true,
                serializedName: "negative",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SentenceSentiment = {
    serializedName: "SentenceSentiment",
    type: {
        name: "Composite",
        className: "SentenceSentiment",
        modelProperties: {
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            sentiment: {
                required: true,
                serializedName: "sentiment",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "positive",
                        "neutral",
                        "negative"
                    ]
                }
            },
            confidenceScores: {
                required: true,
                serializedName: "confidenceScores",
                type: {
                    name: "Composite",
                    className: "SentimentConfidenceScores"
                }
            }
        }
    }
};
export const DocumentSentiment = {
    serializedName: "DocumentSentiment",
    type: {
        name: "Composite",
        className: "DocumentSentiment",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            sentiment: {
                required: true,
                serializedName: "sentiment",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "positive",
                        "neutral",
                        "negative",
                        "mixed"
                    ]
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            },
            confidenceScores: {
                required: true,
                serializedName: "confidenceScores",
                type: {
                    name: "Composite",
                    className: "SentimentConfidenceScores"
                }
            },
            sentenceSentiments: {
                required: true,
                serializedName: "sentences",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SentenceSentiment"
                        }
                    }
                }
            },
            warnings: {
                required: true,
                serializedName: "warnings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            }
        }
    }
};
export const TextDocumentBatchStatistics = {
    serializedName: "TextDocumentBatchStatistics",
    type: {
        name: "Composite",
        className: "TextDocumentBatchStatistics",
        modelProperties: {
            documentCount: {
                required: true,
                serializedName: "documentsCount",
                type: {
                    name: "Number"
                }
            },
            validDocumentCount: {
                required: true,
                serializedName: "validDocumentsCount",
                type: {
                    name: "Number"
                }
            },
            erroneousDocumentCount: {
                required: true,
                serializedName: "erroneousDocumentsCount",
                type: {
                    name: "Number"
                }
            },
            transactionCount: {
                required: true,
                serializedName: "transactionsCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SentimentResponse = {
    serializedName: "SentimentResponse",
    type: {
        name: "Composite",
        className: "SentimentResponse",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentSentiment"
                        }
                    }
                }
            },
            errors: {
                required: true,
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                required: true,
                serializedName: "modelVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Entity = {
    serializedName: "Entity",
    type: {
        name: "Composite",
        className: "Entity",
        modelProperties: {
            text: {
                required: true,
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            category: {
                required: true,
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            subCategory: {
                serializedName: "subcategory",
                type: {
                    name: "String"
                }
            },
            confidenceScore: {
                required: true,
                serializedName: "confidenceScore",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const DocumentEntities = {
    serializedName: "DocumentEntities",
    type: {
        name: "Composite",
        className: "DocumentEntities",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            entities: {
                required: true,
                serializedName: "entities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Entity"
                        }
                    }
                }
            },
            warnings: {
                required: true,
                serializedName: "warnings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const EntitiesResult = {
    serializedName: "EntitiesResult",
    type: {
        name: "Composite",
        className: "EntitiesResult",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentEntities"
                        }
                    }
                }
            },
            errors: {
                required: true,
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                required: true,
                serializedName: "modelVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Match = {
    serializedName: "Match",
    type: {
        name: "Composite",
        className: "Match",
        modelProperties: {
            confidenceScore: {
                required: true,
                serializedName: "confidenceScore",
                type: {
                    name: "Number"
                }
            },
            text: {
                required: true,
                serializedName: "text",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LinkedEntity = {
    serializedName: "LinkedEntity",
    type: {
        name: "Composite",
        className: "LinkedEntity",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            matches: {
                required: true,
                serializedName: "matches",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Match"
                        }
                    }
                }
            },
            language: {
                required: true,
                serializedName: "language",
                type: {
                    name: "String"
                }
            },
            dataSourceEntityId: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            url: {
                required: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            },
            dataSource: {
                required: true,
                serializedName: "dataSource",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentLinkedEntities = {
    serializedName: "DocumentLinkedEntities",
    type: {
        name: "Composite",
        className: "DocumentLinkedEntities",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            entities: {
                required: true,
                serializedName: "entities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LinkedEntity"
                        }
                    }
                }
            },
            warnings: {
                required: true,
                serializedName: "warnings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const EntityLinkingResult = {
    serializedName: "EntityLinkingResult",
    type: {
        name: "Composite",
        className: "EntityLinkingResult",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentLinkedEntities"
                        }
                    }
                }
            },
            errors: {
                required: true,
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                required: true,
                serializedName: "modelVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DocumentKeyPhrases = {
    serializedName: "DocumentKeyPhrases",
    type: {
        name: "Composite",
        className: "DocumentKeyPhrases",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            keyPhrases: {
                required: true,
                serializedName: "keyPhrases",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            warnings: {
                required: true,
                serializedName: "warnings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const KeyPhraseResult = {
    serializedName: "KeyPhraseResult",
    type: {
        name: "Composite",
        className: "KeyPhraseResult",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentKeyPhrases"
                        }
                    }
                }
            },
            errors: {
                required: true,
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                required: true,
                serializedName: "modelVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LanguageInput = {
    serializedName: "LanguageInput",
    type: {
        name: "Composite",
        className: "LanguageInput",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            text: {
                required: true,
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            countryHint: {
                serializedName: "countryHint",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LanguageBatchInput = {
    serializedName: "LanguageBatchInput",
    type: {
        name: "Composite",
        className: "LanguageBatchInput",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LanguageInput"
                        }
                    }
                }
            }
        }
    }
};
export const DetectedLanguage = {
    serializedName: "DetectedLanguage",
    type: {
        name: "Composite",
        className: "DetectedLanguage",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            iso6391Name: {
                required: true,
                serializedName: "iso6391Name",
                type: {
                    name: "String"
                }
            },
            confidenceScore: {
                required: true,
                serializedName: "confidenceScore",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const DocumentLanguage = {
    serializedName: "DocumentLanguage",
    type: {
        name: "Composite",
        className: "DocumentLanguage",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            detectedLanguage: {
                required: true,
                serializedName: "detectedLanguage",
                type: {
                    name: "Composite",
                    className: "DetectedLanguage"
                }
            },
            warnings: {
                required: true,
                serializedName: "warnings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextAnalyticsWarning"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentStatistics"
                }
            }
        }
    }
};
export const LanguageResult = {
    serializedName: "LanguageResult",
    type: {
        name: "Composite",
        className: "LanguageResult",
        modelProperties: {
            documents: {
                required: true,
                serializedName: "documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentLanguage"
                        }
                    }
                }
            },
            errors: {
                required: true,
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentError"
                        }
                    }
                }
            },
            statistics: {
                serializedName: "statistics",
                type: {
                    name: "Composite",
                    className: "TextDocumentBatchStatistics"
                }
            },
            modelVersion: {
                required: true,
                serializedName: "modelVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map